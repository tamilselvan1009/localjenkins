<?xml version='1.1' encoding='UTF-8'?>
<project>
  <actions/>
  <description>Run VcRunTests on Ubuntu32 bit mac</description>
  <keepDependencies>false</keepDependencies>
  <properties>
    <hudson.plugins.buildblocker.BuildBlockerProperty plugin="build-blocker-plugin@1.7.3">
      <useBuildBlocker>false</useBuildBlocker>
      <blockLevel>GLOBAL</blockLevel>
      <scanQueueFor>DISABLED</scanQueueFor>
      <blockingJobs></blockingJobs>
    </hudson.plugins.buildblocker.BuildBlockerProperty>
    <com.sonyericsson.rebuild.RebuildSettings plugin="rebuild@1.30">
      <autoRebuild>false</autoRebuild>
      <rebuildDisabled>false</rebuildDisabled>
    </com.sonyericsson.rebuild.RebuildSettings>
    <hudson.model.ParametersDefinitionProperty>
      <parameterDefinitions>
        <hudson.model.StringParameterDefinition>
          <name>BUILD_NAME</name>
          <description></description>
          <defaultValue>user_trigger</defaultValue>
          <trim>false</trim>
        </hudson.model.StringParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>HARVESTER_DIR</name>
          <description>Directory containing the clone of Harvester</description>
          <defaultValue></defaultValue>
          <trim>false</trim>
        </hudson.model.StringParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>VECTOR_LICENSE_FILE</name>
          <description></description>
          <defaultValue>27000@192.168.163.60</defaultValue>
          <trim>false</trim>
        </hudson.model.StringParameterDefinition>
      </parameterDefinitions>
    </hudson.model.ParametersDefinitionProperty>
    <hudson.plugins.throttleconcurrents.ThrottleJobProperty plugin="throttle-concurrents@2.0.1">
      <maxConcurrentPerNode>0</maxConcurrentPerNode>
      <maxConcurrentTotal>0</maxConcurrentTotal>
      <categories class="java.util.concurrent.CopyOnWriteArrayList"/>
      <throttleEnabled>false</throttleEnabled>
      <throttleOption>project</throttleOption>
      <limitOneJobWithMatchingParams>false</limitOneJobWithMatchingParams>
      <paramsToUseForLimit></paramsToUseForLimit>
    </hudson.plugins.throttleconcurrents.ThrottleJobProperty>
  </properties>
  <scm class="hudson.scm.NullSCM"/>
  <assignedNode>Ubuntu32bit_71</assignedNode>
  <canRoam>false</canRoam>
  <disabled>false</disabled>
  <blockBuildWhenDownstreamBuilding>false</blockBuildWhenDownstreamBuilding>
  <blockBuildWhenUpstreamBuilding>false</blockBuildWhenUpstreamBuilding>
  <triggers/>
  <concurrentBuild>false</concurrentBuild>
  <builders>
    <hudson.tasks.Shell>
      <command>#!/bin/bash -xe

export MALLOC_CHECK_=2
set ulimit -c unlimited

#Common Variables
export VECTORCAST_DIR=${WORKSPACE}/vcast
export PYTHONPATH=/usr/lib/python2.7/dist-packages:PYTHONPATH
export VC_RESULT_DIR=$PWD/results

mkdir &quot;${VC_RESULT_DIR}&quot;

#Copy the artifacts
scp -r vectorindia@192.168.163.73:$HARVESTER_DIR/tests .
scp -r vectorindia@192.168.163.73:$HARVESTER_DIR/vcast .

#Print the version
$VECTORCAST_DIR/vcshell --version
$VECTORCAST_DIR/clicast --version

#Cmake and run tests

mkdir tbuild_echo
cd tbuild_echo
cmake ../tests -DCMAKE_C_COMPILER=gcc -DCMAKE_CXX_COMPILER=g++
export _VC_RUNTEST_RETURN_CODE_=0
$VECTORCAST_DIR/vpython VcRunTests.py --run_tests=EchoTests|| export _VC_RUNTEST_RETURN_CODE_=$?
find . -name &quot;TESTINSS*&quot; -exec cat &apos;{}&apos; &gt;&gt; ${VC_RESULT_DIR}/ECHO.DAT &apos;;&apos;
cd $WORKSPACE

mkdir tbuild_echodb
cd tbuild_echodb
cmake ../tests -DCMAKE_C_COMPILER=gcc -DCMAKE_CXX_COMPILER=g++
export _VC_RUNTEST_RETURN_CODE_=0
$VECTORCAST_DIR/vpython VcRunTests.py --run_tests=EchoDbTests|| export _VC_RUNTEST_RETURN_CODE_=$?
find . -name &quot;TESTINSS*&quot; -exec cat &apos;{}&apos; &gt;&gt; ${VC_RESULT_DIR}/ECHODB.DAT &apos;;&apos;
cd $WORKSPACE

mkdir tbuild_newecho
cd tbuild_newecho
cmake ../tests -DCMAKE_C_COMPILER=gcc -DCMAKE_CXX_COMPILER=g++
export _VC_RUNTEST_RETURN_CODE_=0
$VECTORCAST_DIR/vpython VcRunTests.py --run_tests=NewEchoTests|| export _VC_RUNTEST_RETURN_CODE_=$?
find . -name &quot;TESTINSS*&quot; -exec cat &apos;{}&apos; &gt;&gt; ${VC_RESULT_DIR}/NEWECHO.DAT &apos;;&apos;
cd $WORKSPACE

mkdir tbuild_newechocmddb
cd tbuild_newechocmddb
cmake ../tests -DCMAKE_C_COMPILER=gcc -DCMAKE_CXX_COMPILER=g++
export _VC_RUNTEST_RETURN_CODE_=0
$VECTORCAST_DIR/vpython VcRunTests.py --run_tests=NewEchoCmdDbTests|| export _VC_RUNTEST_RETURN_CODE_=$?
find . -name &quot;TESTINSS*&quot; -exec cat &apos;{}&apos; &gt;&gt; ${VC_RESULT_DIR}/NEWECHOCMDDB.DAT &apos;;&apos;
cd $WORKSPACE

#Copy the TESTINSS.DAT to the upstream job
scp -r ${VC_RESULT_DIR} vectorindia@192.168.163.73:${HARVESTER_DIR}/.

echo The return code from VcRunTests: $_VC_RUNTEST_RETURN_CODE_</command>
    </hudson.tasks.Shell>
  </builders>
  <publishers/>
  <buildWrappers>
    <hudson.plugins.ws__cleanup.PreBuildCleanup plugin="ws-cleanup@0.34">
      <deleteDirs>false</deleteDirs>
      <cleanupParameter></cleanupParameter>
      <externalDelete></externalDelete>
    </hudson.plugins.ws__cleanup.PreBuildCleanup>
    <org.jenkinsci.plugins.buildnamesetter.BuildNameSetter plugin="build-name-setter@1.6.9">
      <template>${ENV,var=&quot;BUILD_NAME&quot;}</template>
      <runAtStart>true</runAtStart>
      <runAtEnd>true</runAtEnd>
    </org.jenkinsci.plugins.buildnamesetter.BuildNameSetter>
  </buildWrappers>
</project>