<?xml version='1.0' encoding='UTF-8'?>
<project>
  <actions/>
  <description></description>
  <keepDependencies>false</keepDependencies>
  <properties>
    <hudson.model.ParametersDefinitionProperty>
      <parameterDefinitions>
        <hudson.model.StringParameterDefinition>
          <name>VECTORCAST_DIR</name>
          <description>Vectorcast directory</description>
          <defaultValue>/home/vectorindia/newvca/release</defaultValue>
        </hudson.model.StringParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>summary_file</name>
          <description></description>
          <defaultValue>summary.txt</defaultValue>
        </hudson.model.StringParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>top_level_archive_dir</name>
          <description></description>
          <defaultValue>/mnt/nfs/shared/firefox_results/linux</defaultValue>
        </hudson.model.StringParameterDefinition>
      </parameterDefinitions>
    </hudson.model.ParametersDefinitionProperty>
  </properties>
  <scm class="hudson.scm.NullSCM"/>
  <assignedNode>Firefox_linux</assignedNode>
  <canRoam>false</canRoam>
  <disabled>false</disabled>
  <blockBuildWhenDownstreamBuilding>false</blockBuildWhenDownstreamBuilding>
  <blockBuildWhenUpstreamBuilding>false</blockBuildWhenUpstreamBuilding>
  <triggers/>
  <concurrentBuild>false</concurrentBuild>
  <builders>
    <hudson.tasks.Shell>
      <command>#!/bin/bash -xe

#function to handle error 
handle_error()
{
	export _error_=$?
	if [ ! &quot;$_error_&quot; == &quot;0&quot; ];then
		echo &quot;      Command failed &quot; &gt;&gt; $summary_file
		export _RETURN_CODE_=$_error_
	fi
}

#function to run commands
#Set up Environment varaibles
export VECTOR_LICENSE_FILE=/home/vectorindia/vector-license/vector-VECTORINDIA.lic
export PYTHONPATH=/usr/lib/python2.7/dist-packages:PYTHONPATH

#Print tools version in console for reference
$VECTORCAST_DIR/vcshell --version
$VECTORCAST_DIR/clicast --version

#Copy the firefox source 
cp -r /home/vectorindia/firefox/firefox/* $WORKSPACE/.

#printing date 
echo &gt;&gt; $summary_file
echo &quot;BUILD DATE IS : `$(date)`&quot; &gt;&gt; $summary_file
 
. ./make_config

#print VcTools version in log file
echo &quot;---- Results for VcTools Version : ` $VECTORCAST_DIR/vcshell --version | grep Version | awk &apos;{print $3}&apos;` &quot; &gt;&gt; $summary_file
echo  &gt;&gt; $summary_file


#Execute and measure timings for vcshell make -j4
echo &quot;    Vcshell make -j4 &quot; &gt;&gt; $summary_file
time ($VECTORCAST_DIR/vcshell --db=pristine_vcshell.db make -j4 &gt;vcshell_make.out.txt 2&gt;&amp;1) 2&gt;&gt; $summary_file || handle_error
echo  &gt;&gt; $summary_file

#Execute and measure timings for vcshell metrics -j4
make clean
echo &quot;    Vcshell metrics -j4 &quot; &gt;&gt; $summary_file
time ($VECTORCAST_DIR/vcshell --flags=&quot;-include=1,-f=1,-std=gnu++0x,-m=1,-W=1&quot; --metrics make -j4 &gt;vcshell_metrics.out.txt 2&gt;&amp;1) 2&gt;&gt; $summary_file || handle_error
echo  &gt;&gt; $summary_file

#Execute and mesaure timings for getmetrics
echo &quot;   Vcdb Getmetrics for vcshell --metrics &quot;  &gt;&gt; $summary_file
time ($VECTORCAST_DIR/vcdb getmetrics &gt; vcdb_getmetrics_for_vcshell_metrics.out.txt 2&gt;&amp;1) 2&gt;&gt;$summary_file || handle_error
echo &quot;  Metrics collected : `cat  vcdb_getmetrics_for_vcshell_metrics.out.txt | wc -l`&quot; &gt;&gt; $summary_file
echo &gt;&gt; $summary_file

#Execute and measure timings for clearmetrics
cp vcshell.db vcutil_metrics.db
echo &quot;   Vcdb clearmetrics &quot;  &gt;&gt; $summary_file
time ($VECTORCAST_DIR/vcdb clearmetrics --db=vcutil_metrics.db &gt; vcdb_clearmetrics.out.txt 2&gt;&amp;1) 2&gt;&gt; $summary_file || handle_error
echo &gt;&gt; $summary_file

#Execute and measure timings for vcutil addmetrics
echo &quot;  Vcutil addmetrics &quot;  &gt;&gt; $summary_file
time ($VECTORCAST_DIR/vcutil --db=vcutil_metrics.db  --flags=&quot;-include=1,-f=1,-std=gnu++0x,-m=1,-W=1&quot; --all addmetrics -j4 &gt; vcutil_addmetrics.out.txt 2&gt;&amp;1) 2&gt;&gt; $summary_file || handle_error
echo &gt;&gt; $summary_file

#Verify metrics recorded in vcutil
echo &quot;   Vcdb Getmetrics for vcutil addmetrics &quot;  &gt;&gt; $summary_file
time ($VECTORCAST_DIR/vcdb getmetrics &gt; vcdb_getmetrics_for_vcshell_metrics.out.txt 2&gt;&amp;1) 2&gt;&gt;$summary_file || handle_error
echo &quot;  Metrics collected : `cat  vcdb_getmetrics_for_vcshell_metrics.out.txt | wc -l`&quot; &gt;&gt; $summary_file
echo &gt;&gt; $summary_file

#Instrumenting 
echo &quot;   Instrumenting respective files        &quot;  &gt;&gt; $summary_file
time ($VECTORCAST_DIR/vcutil  --db=vcutil_metrics.db --flags=&quot;-include=1,-f=1,-std=gnu++0x,-m=1,-W=1&quot; --all --jobs=4 --destination_dir=InstFiles --coverage_type=statement instrument -j4 &gt; vcutil_instr.out.txt 2&gt;&amp;1) 2&gt;&gt; $summary_file || handle_error
echo &gt;&gt; $summary_file

#Quick parsing
echo &quot;   Quick parsing respective files        &quot; &gt;&gt; $summary_file
time ($VECTORCAST_DIR/vcutil --db=vcutil_metrics.db --flags=&quot;-include=1,-f=1,-std=gnu++0x,-m=1,-W=1&quot; --all --jobs=4 --destination_dir=Quick quickparse -j4 &gt; vcutil_quick.out 2&gt;&amp;1) 2&gt;&gt; $summary_file || handle_error
echo &gt;&gt; $summary_file


echo &quot;Time: getfiles&quot; &gt;&gt; summary.txt
time ($VECTORCAST_DIR/vcdb getfiles &gt;vcdb_getfiles.out.txt 2&gt;&amp;1) 2&gt;&gt; summary.txt || handle_error
echo &quot;Time: dumpcommands&quot; &gt;&gt; summary.txt
time ($VECTORCAST_DIR/vcdb dumpcommands &gt;vcdb_dumpcommand.out.txt 2&gt;&amp;1) 2&gt;&gt; summary.txt || handle_error
echo &quot;Time: dumpverbs&quot;
time ($VECTORCAST_DIR/vcdb dumpverbs &gt; vcdb_dumpverbs.out.txt 2&gt;&amp;1) 2&gt;&gt; summary.txt  || handle_error
echo &quot;Time: getapps&quot; &gt;&gt; summary.txt
time ($VECTORCAST_DIR/vcdb getapps &gt;vcdb_getapps.out.txt 2&gt;&amp;1) 2&gt;&gt; summary.txt  || handle_error
echo &quot;Time: getcommentdata&quot; &gt;&gt; summary.txt
time ($VECTORCAST_DIR/vcdb getcommentdata &gt; vcdb_getcommentdata.out.txt 2&gt;&amp;1) 2&gt;&gt; summary.txt || handle_error
echo &quot;Time: getmetrics&quot; &gt;&gt; summary.txt
time ($VECTORCAST_DIR/vcdb getmetrics &gt; vcdb_getmetrics_data.out.txt 2&gt;&amp;1) 2&gt;&gt; summary.txt  || handle_error
echo &quot;Time: getpaths&quot; &gt;&gt; summary.txt
time ($VECTORCAST_DIR/vcdb getpaths &gt; vcdb_getpaths_data.out.txt 2&gt;&amp;1) 2&gt;&gt; summary.txt  || handle_error
echo &quot;Time: gettags&quot; &gt;&gt; summary.txt
time ($VECTORCAST_DIR/vcdb gettags &gt; vcdb_gettags_data.out.txt 2&gt;&amp;1) 2&gt;&gt; summary.txt || handle_error
echo &quot;Time: getlinkcmd&quot; &gt;&gt; summary.txt
time ($VECTORCAST_DIR/vcdb getlinkcmd &gt; vcdb_getlinkcmd_data.out.txt 2&gt;&amp;1) 2&gt;&gt;summary.txt || handle_error
echo &quot;Time: list-prefixes&quot;
time ($VECTORCAST_DIR/vcdb list-prefixes &gt; vcdb_list-prefixes_data.out.txt 2&gt;&amp;1) 2&gt;&gt; summary.txt || handle_error
echo &quot;Time: getcommands&quot; &gt;&gt; summary.txt
chmod +x ../../getcmd.sh
time (../.././getcmd.sh vcdb_getfiles.out.txt &gt; getcommands_data.out.txt 2&gt;&amp;1) 2&gt;&gt; summary.txt || handle_error
chmod +x ../../getcommentdensity.sh
echo &quot;Time: getcommentdensity&quot; &gt;&gt; summary.txt
time (../.././getcommentdensity.sh vcdb_getfiles.out.txt &gt; get_commentdensit_out.txt 2&gt;&amp;1) 2&gt;&gt; summary.txt || handle_error
chmod +x ../../getincludes.sh
echo &quot;Time: getincludes&quot; &gt;&gt; summary.txt
time (../.././getincludes.sh vcdb_getfiles.out.txt &gt; get_includes_out.txt 2&gt;&amp;1) 2&gt;&gt;summary.txt || handle_error
chmod +x ../../getdefines.sh
echo &quot;Time: getdefines&quot; &gt;&gt; summary.txt
time (../.././getdefines.sh vcdb_getfiles.out.txt &gt; get_defines_out.txt 2&gt;&amp;1) 2&gt;&gt; summary.txt || handle_error
chmod +x ../../getoption.sh || handle_error
echo &quot;Time: getoptions&quot; &gt;&gt;summary.txt
time (../.././getoption.sh vcdb_getfiles.out.txt &gt; get_options_out.txt 2&gt;&amp;1) 2&gt;&gt; summary.txt || handle_error
chmod +x ../../getppopt.sh || handle_error
echo &quot;Time: getppoptions&quot; &gt;&gt; summary.txt
time (../.././getppopt.sh vcdb_getfiles.out.txt &gt;get_poptions_out.txt 2&gt;&amp;1) 2&gt;&gt; summary.txt || handle_error
chmod +x ../../getunitindex.sh || handle_error
echo &quot;Time: getunitindex&quot; &gt;&gt; summary.txt
time (../.././getunitindex.sh vcdb_getfiles.out.txt &gt;get_unitindex_out.txt 2&gt;&amp;1) 2&gt;&gt; summary.txt || handle_error
chmod +x ../../getpathtype || handle_error
echo &quot;Time: getpathtype&quot; &gt;&gt; summary.txt
time (../.././getpathtype.sh vcdb_getfiles.out.txt &gt;get_pathtypes_out.txt 2&gt;&amp;1) 2&gt;&gt; summary.txt || handle_error
chmod +x ../../setpathtype.sh || handle_error
echo &quot;Time: setpathtype&quot; &gt;&gt; summary.txt
time (../.././setpathtype.sh vcdb_getfiles.out.txt &gt; set_pathtypes_out.txt 2&gt;&amp;1) 2&gt;&gt; summary.txt || handle_error



#quick 
#Archive the artifacts
cd $top_level_archive_dir
archive_dir=$(date +%d)
if [ -d $archive_dir ];then
	rm -rf $archive_dir
fi
mkdir $archive_dir
cp $WORKSPACE/mozilla-release/obj-x86_64-unknown-linux-gnu/summary.txt $archive_dir/.
cp $WORKSPACE/mozilla-release/obj-x86_64-unknown-linux-gnu/*.out.txt $archive_dir/.

exit /b $_RETURN_CODE_



</command>
    </hudson.tasks.Shell>
  </builders>
  <publishers>
    <hudson.plugins.emailext.ExtendedEmailPublisher plugin="email-ext@2.57">
      <recipientList>vectorindia@vectorcast.com</recipientList>
      <configuredTriggers>
        <hudson.plugins.emailext.plugins.trigger.AlwaysTrigger>
          <email>
            <recipientList>shekhar.singh@vectorcast.com</recipientList>
            <subject>Firefox Linux Result</subject>
            <body>Hello All,

${FILE,path=&quot;mozilla-release/obj-x86_64-unknown-linux-gnu/summary.txt&quot;}

Thanks,
Jenkins</body>
            <recipientProviders>
              <hudson.plugins.emailext.plugins.recipients.ListRecipientProvider/>
            </recipientProviders>
            <attachmentsPattern>mozilla-release/obj-x86_64-unknown-linux-gnu/summary.txt</attachmentsPattern>
            <attachBuildLog>false</attachBuildLog>
            <compressBuildLog>false</compressBuildLog>
            <replyTo>vectorinida@vectorcast.com</replyTo>
            <contentType>both</contentType>
          </email>
        </hudson.plugins.emailext.plugins.trigger.AlwaysTrigger>
      </configuredTriggers>
      <contentType>both</contentType>
      <defaultSubject>Firefox Linux Result</defaultSubject>
      <defaultContent>$DEFAULT_CONTENT</defaultContent>
      <attachmentsPattern>mozilla-release/obj-x86_64-unknown-linux-gnu/summary.txt</attachmentsPattern>
      <presendScript>$DEFAULT_PRESEND_SCRIPT</presendScript>
      <postsendScript>$DEFAULT_POSTSEND_SCRIPT</postsendScript>
      <attachBuildLog>false</attachBuildLog>
      <compressBuildLog>false</compressBuildLog>
      <replyTo>vectorindia@vectorcast.com</replyTo>
      <saveOutput>false</saveOutput>
      <disabled>false</disabled>
    </hudson.plugins.emailext.ExtendedEmailPublisher>
  </publishers>
  <buildWrappers>
    <hudson.plugins.ws__cleanup.PreBuildCleanup plugin="ws-cleanup@0.32">
      <deleteDirs>false</deleteDirs>
      <cleanupParameter></cleanupParameter>
      <externalDelete></externalDelete>
    </hudson.plugins.ws__cleanup.PreBuildCleanup>
  </buildWrappers>
</project>