<?xml version='1.0' encoding='UTF-8'?>
<project>
  <actions/>
  <description></description>
  <keepDependencies>false</keepDependencies>
  <properties>
    <hudson.model.ParametersDefinitionProperty>
      <parameterDefinitions>
        <hudson.model.StringParameterDefinition>
          <name>LINUX_VECTORCAST_DIR</name>
          <description>Vectorcast directory</description>
          <defaultValue>/home/vectorindia/newvca/release</defaultValue>
        </hudson.model.StringParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>summary_file</name>
          <description></description>
          <defaultValue>summary.txt</defaultValue>
        </hudson.model.StringParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>top_level_archive_dir</name>
          <description></description>
          <defaultValue>/mnt/nfs/shared/firefox_results/linux</defaultValue>
        </hudson.model.StringParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>BUILD_NAME</name>
          <description></description>
          <defaultValue></defaultValue>
        </hudson.model.StringParameterDefinition>
      </parameterDefinitions>
    </hudson.model.ParametersDefinitionProperty>
  </properties>
  <scm class="hudson.scm.NullSCM"/>
  <assignedNode>Firefox_linux</assignedNode>
  <canRoam>false</canRoam>
  <disabled>false</disabled>
  <blockBuildWhenDownstreamBuilding>false</blockBuildWhenDownstreamBuilding>
  <blockBuildWhenUpstreamBuilding>false</blockBuildWhenUpstreamBuilding>
  <triggers/>
  <concurrentBuild>false</concurrentBuild>
  <builders>
    <hudson.tasks.Shell>
      <command>#!/bin/bash -xe

#function to handle error 
handle_error()
{
	export _error_=$?
	if [ ! &quot;$_error_&quot; == &quot;0&quot; ];then
		echo &quot;      Command failed &quot; &gt;&gt; $summary_file
		export _RETURN_CODE_=$_error_
	fi
}
#function to generate tabular file
Table()
{
grep $1 $2 | awk &apos;{printf(&quot;\t         %s    \t&quot;,$2)}&apos;&gt;&gt;$summary_file || handle_error
echo -e &quot;       $3    &quot;&gt;&gt;$summary_file || handle_error
}
#Set up Environment varaibles
export VECTORCAST_DIR=${LINUX_VECTORCAST_DIR}
export VECTOR_LICENSE_FILE=/home/vectorindia/vector-license/vector-VECTORINDIA.lic
export PYTHONPATH=/usr/lib/python2.7/dist-packages:PYTHONPATH

#Print tools version in console for reference
$VECTORCAST_DIR/vcshell --version
$VECTORCAST_DIR/clicast --version

#Copy the firefox source 
cp -r /home/vectorindia/firefox/firefox/* $WORKSPACE/.
 
. ./make_config

#print VcTools version in log file
echo &quot;---- Results for VcTools Version : ` $VECTORCAST_DIR/vcshell --version | grep Version | awk &apos;{print $3}&apos;` &quot; &gt;&gt; $summary_file
echo  &gt;&gt; $summary_file

#tabular format for the file
echo -e  &quot;Command            \t           Time      \t  Artifact&quot; &gt;&gt;$summary_file

#Execute and measure timings for vcshell make -j8
echo -n -e &quot;Vchell make \t&quot;&gt;&gt;$summary_file
time ($VECTORCAST_DIR/vcshell --db=pristine_vcshell.db make -j8 &gt;vcshell_make.out.txt 2&gt;&amp;1) 2&gt;&gt; vcshell_make || handle_error
Table &quot;user&quot; vcshell_make &quot;--&quot;

#Execute and measure timings for vcshell metrics -j8
make clean
echo -n -e &quot;Vcshell metrics\t&quot;&gt;&gt;$summary_file
time ($VECTORCAST_DIR/vcshell --flags=&quot;-include=1,-f=1,-std=gnu++0x,-m=1,-W=1&quot; --metrics make -j8 &gt;vcshell_metrics.out.txt 2&gt;&amp;1) 2&gt;&gt; vcshell_metrics || handle_error
Table &quot;user&quot; vcshell_metrics &quot;--&quot;

#Execute and mesaure timings for getmetrics
echo -n -e &quot;Vcdb getmetrics\t&quot;&gt;&gt;$summary_file
time ($VECTORCAST_DIR/vcdb getmetrics &gt; vcdb_getmetrics_for_vcshell_metrics.out.txt 2&gt;&amp;1) 2&gt;&gt;vcdb_getmetrics || handle_error
Table &quot;user&quot; vcdb_getmetrics &quot;`cat  vcdb_getmetrics_for_vcshell_metrics.out.txt | wc -l`&quot;


#Execute and measure timings for clearmetrics
cp vcshell.db vcutil_metrics.db
echo -n -e &quot;Vcdb clearmetrics&quot;&gt;&gt;$summary_file
time ($VECTORCAST_DIR/vcdb clearmetrics --db=vcutil_metrics.db &gt; vcdb_clearmetrics.out.txt 2&gt;&amp;1) 2&gt;&gt; vcdb_clearmetrics || handle_error
Table &quot;user&quot; vcdb_clearmetrics &quot;--&quot;

#Execute and measure timings for vcutil addmetrics
echo  -n -e &quot;Vcutil Addmetrics&quot;&gt;&gt;$summary_file
time ($VECTORCAST_DIR/vcutil --db=vcutil_metrics.db  --flags=&quot;-include=1,-f=1,-std=gnu++0x,-m=1,-W=1&quot; --all addmetrics  &gt; vcutil_addmetrics.out.txt 2&gt;&amp;1) 2&gt;&gt; vcutil_addmetrics || handle_error
Table &quot;user&quot; vcutil_addmetrics &quot;--&quot;


#Verify metrics recorded in vcutil
echo -n -e &quot;Vcdb getmetrics\t&quot;&gt;&gt;$summary_file
time ($VECTORCAST_DIR/vcdb getmetrics &gt; vcdb_getmetrics_for_vcshell_metrics.out.txt 2&gt;&amp;1) 2&gt;&gt;vcdb_getmetrics_vcutil || handle_error
Table &quot;user&quot; vcdb_getmetrics_vcutil &quot;`cat  vcdb_getmetrics_for_vcshell_metrics.out.txt | wc -l`&quot;


#Vcutil Instrument 
echo -n -e &quot;Vcutil Instrument&quot;&gt;&gt;$summary_file
time ($VECTORCAST_DIR/vcutil  --db=vcutil_metrics.db --flags=&quot;-include=1,-f=1,-std=gnu++0x,-m=1,-W=1&quot; --all --jobs=4 --destination_dir=InstFiles --coverage_type=statement instrument &gt; vcutil_instr.out.txt 2&gt;&amp;1) 2&gt;&gt; vcutil_instrument || handle_error
Table &quot;user&quot; vcutil_instrument &quot;--&quot;

#Vcutil Quick parse
echo -n -e &quot;Vcutil qikparse\t&quot;&gt;&gt;$summary_file
time ($VECTORCAST_DIR/vcutil --db=vcutil_metrics.db --flags=&quot;-include=1,-f=1,-std=gnu++0x,-m=1,-W=1&quot; --all --jobs=4 --destination_dir=Quick quickparse &gt; vcutil_quick.out 2&gt;&amp;1) 2&gt;&gt; vcutil_qikparse || handle_error
Table &quot;user&quot; vcutil_qikparse &quot;--&quot;

#vcdb getfiles
echo -n -e &quot;Vcdb getfiles\t&quot;&gt;&gt;$summary_file
time ($VECTORCAST_DIR/vcdb getfiles &gt;vcdb_getfiles.out.txt 2&gt;&amp;1) 2&gt;&gt; vcdb__getfiles || handle_error
Table &quot;user&quot; vcdb__getfiles &quot;`cat vcdb_getfiles | grep &quot;Count&quot; | awk &apos;{print $3}&apos;`&quot;
#vcdb dumpcmd
echo -n -e &quot;Vcdb dumpcmd\t&quot;&gt;&gt;$summary_file
time ($VECTORCAST_DIR/vcdb dumpcommands &gt;vcdb_dumpcommand.out.txt 2&gt;&amp;1) 2&gt;&gt; vcdb_dump || handle_error
Table &quot;user&quot; vcdb_dump &quot;--&quot;
#vcdb dumpverb
echo -n -e &quot;Vcdb dumpverb\t&quot;&gt;&gt;$summary_file
time ($VECTORCAST_DIR/vcdb dumpverbs &gt; vcdb_dumpverbs.out.txt 2&gt;&amp;1) 2&gt;&gt; vcdb_dumpv  || handle_error
Table &quot;user&quot; vcdb_dumpv &quot;--&quot;
#vcdb getapps
echo -n -e &quot;Vcdb getapps\t&quot;&gt;&gt;$summary_file
time ($VECTORCAST_DIR/vcdb getapps &gt;vcdb_getapps.out.txt 2&gt;&amp;1) 2&gt;&gt; vcdb_getapps  || handle_error
Table &quot;user&quot; vcdb_getapps &quot;--&quot;
#get commentdata
echo -n -e &quot;Vcdb getcommentdata&quot;&gt;&gt;$summary_file
time ($VECTORCAST_DIR/vcdb getcommentdata &gt; vcdb_getcommentdata.out.txt 2&gt;&amp;1) 2&gt;&gt; vcdb_getcommentdata || handle_error
Table &quot;user&quot; vcdb_getcommentdata &quot;--&quot;
#get vcdb metrics
echo -n -e &quot;Vcdb getmetrics\t&quot;&gt;&gt;$summary_file
time ($VECTORCAST_DIR/vcdb getmetrics &gt; vcdb_getmetrics_data.out.txt 2&gt;&amp;1) 2&gt;&gt; vcdb_met  || handle_error
Table &quot;user&quot; vcdb_met &quot;--&quot;
#get vcdb path
echo -n -e &quot;Vcdb getpaths\t&quot;&gt;&gt;$summary_file
time ($VECTORCAST_DIR/vcdb getpaths &gt; vcdb_getpaths_data.out.txt 2&gt;&amp;1) 2&gt;&gt; vcdb_getpath  || handle_error
Table &quot;user&quot; vcdb_getpath &quot;--&quot;
#get vcdb tags
echo -n -e &quot;Vcdb gettags\t&quot;&gt;&gt;$summary_file
time ($VECTORCAST_DIR/vcdb gettags &gt; vcdb_gettags_data.out.txt 2&gt;&amp;1) 2&gt;&gt; vcdb_gettags || handle_error
Table &quot;user&quot; vcdb_gettags &quot;--&quot;
#get linkcmd
echo -n -e &quot;Vcdb getlinkcmd\t&quot;&gt;&gt;$summary_file
time ($VECTORCAST_DIR/vcdb getlinkcmd &gt; vcdb_getlinkcmd_data.out.txt 2&gt;&amp;1) 2&gt;&gt;vcdb_getlinkcmd || handle_error
Table &quot;user&quot; vcdb_getlinkcmd &quot;--&quot;
#get list
echo -n -e &quot;Vcdb list-prefixes&quot;&gt;&gt;$summary_file
time ($VECTORCAST_DIR/vcdb list-prefixes &gt; vcdb_list-prefixes_data.out.txt 2&gt;&amp;1) 2&gt;&gt; vcdb_getlist || handle_error
Table &quot;user&quot; vcdb_getlist &quot;--&quot;
#getcmd.sh
echo -n -e &quot;Getcmd.sh\t&quot;&gt;&gt;$summary_file
chmod +x ../../getcmd.sh
time (../.././getcmd.sh vcdb_getfiles.out.txt &gt; getcommands_data.out.txt 2&gt;&amp;1) 2&gt;&gt; getcmd || handle_error
Table &quot;user&quot; getcmd &quot;--&quot;
#getcommentdensity
echo -n -e &quot;GetcommentDensity.sh&quot;&gt;&gt;$summary_file
chmod +x ../../getcommentdensity.sh
time (../.././getcommentdensity.sh vcdb_getfiles.out.txt &gt; get_commentdensit_out.txt 2&gt;&amp;1) 2&gt;&gt; getcomment || handle_error
Table &quot;user&quot; getcomment &quot;--&quot;
#getincludes
echo -n -e &quot;Getincludes.sh\t&quot;&gt;&gt;$summary_file
chmod +x ../../getincludes.sh
time (../.././getincludes.sh vcdb_getfiles.out.txt &gt; get_includes_out.txt 2&gt;&amp;1) 2&gt;&gt;vcdb_getinclude || handle_error
Table &quot;user&quot; vcdb_getinclude &quot;--&quot;
#getdefines
echo -n -e &quot;Getdefines.sh\t&quot;&gt;&gt;$summary_file
chmod +x ../../getdefines.sh
time (../.././getdefines.sh vcdb_getfiles.out.txt &gt; get_defines_out.txt 2&gt;&amp;1) 2&gt;&gt; vcdb_getdefine || handle_error
Table &quot;user&quot; vcdb_getdefine &quot;--&quot;
#getoptions
echo -n -e &quot;Getoptions.sh\t&quot;&gt;&gt;$summary_file
chmod +x ../../getoption.sh || handle_error
time (../.././getoption.sh vcdb_getfiles.out.txt &gt; get_options_out.txt 2&gt;&amp;1) 2&gt;&gt; vcdb_getoption || handle_error
Table &quot;user&quot; vcdb_getoption &quot;--&quot;
#getpopt
echo -n -e &quot;Getpoptions.sh\t&quot;&gt;&gt;$summary_file
chmod +x ../../getppopt.sh || handle_error
time (../.././getppopt.sh vcdb_getfiles.out.txt &gt;get_poptions_out.txt 2&gt;&amp;1) 2&gt;&gt; vcdb_getpoption || handle_error
Table &quot;user&quot; vcdb_getpoption &quot;--&quot;
#getuniindex
echo -n -e &quot;Getunitindex.sh\t&quot;&gt;&gt;$summary_file
chmod +x ../../getunitindex.sh || handle_error
time (../.././getunitindex.sh vcdb_getfiles.out.txt &gt;get_unitindex_out.txt 2&gt;&amp;1) 2&gt;&gt; vcdb_getunitindex || handle_error
Table &quot;user&quot; vcdb_getunitindex &quot;--&quot;
#getpathtype
echo -n -e &quot;GetPathtype.sh\t&quot;&gt;&gt;$summary_file
chmod +x ../../getpathtype || handle_error
time (../.././getpathtype.sh vcdb_getfiles.out.txt &gt;get_pathtypes_out.txt 2&gt;&amp;1) 2&gt;&gt; vcdb_getpathtype || handle_error
Table &quot;user&quot; vcdb_getpathtype &quot;--&quot;
#setpathtype
echo -n -e &quot;Setpathtype.sh\t&quot;&gt;&gt;$summary_file
chmod +x ../../setpathtype.sh || handle_error
time (../.././setpathtype.sh vcdb_getfiles.out.txt &gt; set_pathtypes_out.txt 2&gt;&amp;1) 2&gt;&gt; vcdb_setpathtype || handle_error
Table &quot;user&quot; vcdb_setpathtype &quot;--&quot;


#quick 
#Archive the artifacts
cd $top_level_archive_dir
archive_dir=$(date +%d)
if [ -d $archive_dir ];then
	rm -rf $archive_dir
fi
mkdir $archive_dir
cp $WORKSPACE/mozilla-release/obj-x86_64-unknown-linux-gnu/summary.txt $archive_dir/.
cp $WORKSPACE/mozilla-release/obj-x86_64-unknown-linux-gnu/*.out.txt $archive_dir/.

exit /b $_RETURN_CODE_



</command>
    </hudson.tasks.Shell>
  </builders>
  <publishers>
    <hudson.plugins.emailext.ExtendedEmailPublisher plugin="email-ext@2.57">
      <recipientList>vectorindia@vectorcast.com</recipientList>
      <configuredTriggers>
        <hudson.plugins.emailext.plugins.trigger.AlwaysTrigger>
          <email>
            <recipientList>shekhar.singh@vectorcast.com</recipientList>
            <subject>Firefox Linux Result</subject>
            <body>Hello All,

${FILE,path=&quot;mozilla-release/obj-x86_64-unknown-linux-gnu/summary.txt&quot;}

Thanks,
Jenkins</body>
            <recipientProviders>
              <hudson.plugins.emailext.plugins.recipients.ListRecipientProvider/>
            </recipientProviders>
            <attachmentsPattern>mozilla-release/obj-x86_64-unknown-linux-gnu/summary.txt</attachmentsPattern>
            <attachBuildLog>false</attachBuildLog>
            <compressBuildLog>false</compressBuildLog>
            <replyTo>vectorinida@vectorcast.com</replyTo>
            <contentType>both</contentType>
          </email>
        </hudson.plugins.emailext.plugins.trigger.AlwaysTrigger>
      </configuredTriggers>
      <contentType>both</contentType>
      <defaultSubject>Firefox Linux Result</defaultSubject>
      <defaultContent>$DEFAULT_CONTENT</defaultContent>
      <attachmentsPattern>mozilla-release/obj-x86_64-unknown-linux-gnu/summary.txt</attachmentsPattern>
      <presendScript>$DEFAULT_PRESEND_SCRIPT</presendScript>
      <postsendScript>$DEFAULT_POSTSEND_SCRIPT</postsendScript>
      <attachBuildLog>false</attachBuildLog>
      <compressBuildLog>false</compressBuildLog>
      <replyTo>vectorindia@vectorcast.com</replyTo>
      <saveOutput>false</saveOutput>
      <disabled>false</disabled>
    </hudson.plugins.emailext.ExtendedEmailPublisher>
  </publishers>
  <buildWrappers>
    <hudson.plugins.ws__cleanup.PreBuildCleanup plugin="ws-cleanup@0.32">
      <deleteDirs>false</deleteDirs>
      <cleanupParameter></cleanupParameter>
      <externalDelete></externalDelete>
    </hudson.plugins.ws__cleanup.PreBuildCleanup>
    <org.jenkinsci.plugins.buildnamesetter.BuildNameSetter plugin="build-name-setter@1.6.5">
      <template>${ENV,var=&quot;BUILD_NAME&quot;}</template>
      <runAtStart>true</runAtStart>
      <runAtEnd>false</runAtEnd>
    </org.jenkinsci.plugins.buildnamesetter.BuildNameSetter>
  </buildWrappers>
</project>