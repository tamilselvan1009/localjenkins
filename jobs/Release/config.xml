<?xml version='1.1' encoding='UTF-8'?>
<com.tikal.jenkins.plugins.multijob.MultiJobProject plugin="jenkins-multijob-plugin@1.29">
  <actions/>
  <description></description>
  <keepDependencies>false</keepDependencies>
  <properties>
    <hudson.model.ParametersDefinitionProperty>
      <parameterDefinitions>
        <hudson.model.StringParameterDefinition>
          <name>RELEASE_DIR</name>
          <description>Specify the directory name in HarvesterDistribution into which the build will be copied</description>
          <defaultValue>vcshell_master</defaultValue>
          <trim>false</trim>
        </hudson.model.StringParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>GIT_BRANCH_NAME</name>
          <description>Specify the branch name that needs to be built</description>
          <defaultValue>develop</defaultValue>
          <trim>false</trim>
        </hudson.model.StringParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>BUILD_NAME</name>
          <description>Specify a name for the build. No special char allowed. Use underscore for meaningful names</description>
          <defaultValue>user_trigger</defaultValue>
          <trim>false</trim>
        </hudson.model.StringParameterDefinition>
      </parameterDefinitions>
    </hudson.model.ParametersDefinitionProperty>
  </properties>
  <scm class="hudson.scm.NullSCM"/>
  <assignedNode>Remote_51</assignedNode>
  <canRoam>false</canRoam>
  <disabled>false</disabled>
  <blockBuildWhenDownstreamBuilding>false</blockBuildWhenDownstreamBuilding>
  <blockBuildWhenUpstreamBuilding>false</blockBuildWhenUpstreamBuilding>
  <triggers/>
  <concurrentBuild>false</concurrentBuild>
  <builders>
    <hudson.tasks.Shell>
      <command>#!/bin/bash -xe

#Commonly used varaibles

#Vectorcast dir
export WIN_VECTORCAST_DIR=&apos;H:\\VCAST_REGRESSION\\windows&apos;
export LINUX_VECTORCAST_DIR=&apos;/home/vectorindia/VCAST_REGRESSION/linux&apos;
export LINUX_VECTORCAST_DIR_WIN_PATH=&apos;H:\\VCAST_REGRESSION\\linux&apos;

#Vectorcast build
export WIN_VECTORCAST_BUILD=&apos;B:\\VectorCAST\\vc64\\windows\\install.tar.gz&apos;
export LINUX_VECTORCAST_BUILD=&apos;B:\\VectorCAST\\vc64\\linux\\release.tar.gz&apos;

#Release dir
export LINUX_RELEASE_DIR=/home/vectorindia/HarvesterDistribution/${RELEASE_DIR}
export WIN_RELEASE_DIR=H:\\HarvesterDistribution\\${RELEASE_DIR}

export VECTOR_LICENSE_FILE=7650@licenseserver

#Package name
export LINUX_PACKAGE=harvester.linux.tgz
export WIN_PACKAGE=harvester.win.zip

#Boost dir
export LINUX_BOOST_DIR=/home/TOOLS/boost-1.53.0
export LINUX_BOOST64_DIR=/home/vectorindia/boost-1.55.0-x64
export WIN_BOOST_DIR=C:\\boost\\boost-1.53.0
export WIN_BOOST64_DIR=C:\\boost\\boost-1.53.0-x64
export CYG_BOOST_DIR=/cygdrive/c/boost/boost_cyg_1_54
export BOOST_VER=1_53
export LINUX_BOOST64_VER=1_55

#Zip file of Harvester clone
export LINUX_HARVESTER_CLONE=&apos;/home/vectorindia/Jenkins_Clone/Harvester.zip&apos;
export WIN_HARVESTER_CLONE=&apos;H:\\Jenkins_Clone\\Harvester.zip&apos;

#Package dir
export LINUX_PACKAGE_DIR=&quot;${LINUX_RELEASE_DIR}/linux&quot;
export LINUX64_PACKAGE_DIR=&quot;${LINUX_PACKAGE_DIR}/64_bit&quot;
export WIN_PACKAGE_DIR=&quot;${WIN_RELEASE_DIR}\\windows&quot;
export WIN_PACKAGE_DIR_UNX_PATH=&quot;${LINUX_RELEASE_DIR}/windows&quot;
export VCSANITY_PACKAGE_DIR_UNX_PATH=&quot;${LINUX_RELEASE_DIR}/VcSanity&quot;
export VCSANITY_PACKAGE_DIR_WIN_PATH=&quot;${WIN_PACKAGE_DIR}\\VcSanity&quot;

#if the release and clone directory already exists delete it
if [ -d &quot;${LINUX_RELEASE_DIR}&quot; ];then
	rm -rf &quot;${LINUX_RELEASE_DIR}&quot;
fi
export CLONE_DIR=`dirname &quot;${LINUX_HARVESTER_CLONE}&quot;`
if [ -d &quot;${CLONE_DIR}&quot; ];then
	rm -rf &quot;${CLONE_DIR}&quot;
fi

#Create the release and clone directory
mkdir &quot;${LINUX_RELEASE_DIR}&quot;
mkdir &quot;${LINUX_PACKAGE_DIR}&quot;
mkdir &quot;${WIN_PACKAGE_DIR_UNX_PATH}&quot;
mkdir &quot;${VCSANITY_PACKAGE_DIR_UNX_PATH}&quot;
mkdir &quot;${CLONE_DIR}&quot;

#Parameters for Release clone job
echo GIT_BRANCH_NAME=&quot;origin/${GIT_BRANCH_NAME}&quot;                     &gt; ${WORKSPACE}/release_clone.txt
echo HARVESTER_CLONE=&quot;${LINUX_HARVESTER_CLONE}&quot;                     &gt;&gt; ${WORKSPACE}/release_clone.txt
echo VCSANITY_PACKAGE_DIR=&quot;${VCSANITY_PACKAGE_DIR_UNX_PATH}&quot;        &gt;&gt; ${WORKSPACE}/release_clone.txt
echo BUILD_NAME=&quot;${BUILD_NAME}&quot;                                     &gt;&gt; ${WORKSPACE}/release_clone.txt


#Parameters for Release_build_linux32
echo HARVESTER_CLONE=&quot;${LINUX_HARVESTER_CLONE}&quot;       	      &gt; ${WORKSPACE}/release_build_linux32.txt
echo VECTORCAST_DIR=&quot;${LINUX_VECTORCAST_DIR}&quot;                &gt;&gt; ${WORKSPACE}/release_build_linux32.txt
echo RELEASE_DIR=&quot;${LINUX_RELEASE_DIR}&quot;                      &gt;&gt; ${WORKSPACE}/release_build_linux32.txt
echo RELEASE64_DIR=&quot;${LINUX64_RELEASE_DIR}&quot;                  &gt;&gt; ${WORKSPACE}/release_build_linux32.txt
echo BOOST_DIR=&quot;${LINUX_BOOST_DIR}&quot;                          &gt;&gt; ${WORKSPACE}/release_build_linux32.txt
echo BOOST64_DIR=&quot;${LINUX_BOOST64_DIR}&quot;                      &gt;&gt; ${WORKSPACE}/release_build_linux32.txt
echo BOOST_VER=&quot;${BOOST_VER}&quot;                                &gt;&gt; ${WORKSPACE}/release_build_linux32.txt
echo VCSANITY_PACKAGE_DIR=&quot;${VCSANITY_PACKAGE_DIR_UNX_PATH}&quot; &gt;&gt; ${WORKSPACE}/release_build_linux32.txt
echo BUILD_NAME=&quot;${BUILD_NAME}&quot;                              &gt;&gt; ${WORKSPACE}/release_build_linux32.txt
echo PACKAGE_NAME=&quot;${LINUX_PACKAGE}&quot;                         &gt;&gt; ${WORKSPACE}/release_build_linux32.txt

#Parameters for Release_build_windows
echo HARVESTER_CLONE=&quot;${WIN_HARVESTER_CLONE}&quot;   			  &gt; ${WORKSPACE}/release_build_windows.txt
echo VECTORCAST_DIR=&quot;${WIN_VECTORCAST_DIR}&quot;   			     &gt;&gt; ${WORKSPACE}/release_build_windows.txt
echo RELEASE_DIR=&quot;${WIN_RELEASE_DIR}&quot;                        &gt;&gt; ${WORKSPACE}/release_build_windows.txt
echo BOOST_DIR=&quot;${WIN_BOOST_DIR}&quot;                            &gt;&gt; ${WORKSPACE}/release_build_windows.txt
echo BOOST64_DIR=&quot;${WIN_BOOST64_DIR}&quot;                        &gt;&gt; ${WORKSPACE}/release_build_windows.txt
echo CYG_BOOST_DIR=&quot;${CYG_BOOST_DIR}&quot;                        &gt;&gt; ${WORKSPACE}/release_build_windows.txt
echo BOOST_VER=&quot;${BOOST_VER}&quot;                                &gt;&gt; ${WORKSPACE}/release_build_windows.txt
echo VCSANITY_PACKAGE_DIR=&quot;${VCSANITY_PACKAGE_DIR_WIN_PATH}&quot; &gt;&gt; ${WORKSPACE}/release_build_windows.txt
echo BUILD_NAME=&quot;${BUILD_NAME}&quot;                              &gt;&gt; ${WORKSPACE}/release_build_windows.txt
echo PACKAGE_NAME=&quot;${WIN_PACKAGE}&quot;                           &gt;&gt; ${WORKSPACE}/release_build_windows.txt


</command>
    </hudson.tasks.Shell>
    <com.tikal.jenkins.plugins.multijob.MultiJobBuilder>
      <phaseName>SetUp_clone</phaseName>
      <phaseJobs>
        <com.tikal.jenkins.plugins.multijob.PhaseJobsConfig>
          <jobName>Release_clone</jobName>
          <currParams>false</currParams>
          <aggregatedTestResults>false</aggregatedTestResults>
          <exposedSCM>false</exposedSCM>
          <disableJob>false</disableJob>
          <parsingRulesPath></parsingRulesPath>
          <maxRetries>0</maxRetries>
          <enableRetryStrategy>false</enableRetryStrategy>
          <enableCondition>false</enableCondition>
          <abortAllJob>true</abortAllJob>
          <condition></condition>
          <configs>
            <hudson.plugins.parameterizedtrigger.FileBuildParameters plugin="parameterized-trigger@2.35.2">
              <propertiesFile>release_clone.txt</propertiesFile>
              <failTriggerOnMissing>false</failTriggerOnMissing>
              <textParamValueOnNewLine>false</textParamValueOnNewLine>
              <useMatrixChild>false</useMatrixChild>
              <onlyExactRuns>false</onlyExactRuns>
            </hudson.plugins.parameterizedtrigger.FileBuildParameters>
          </configs>
          <killPhaseOnJobResultCondition>FAILURE</killPhaseOnJobResultCondition>
          <buildOnlyIfSCMChanges>false</buildOnlyIfSCMChanges>
          <applyConditionOnlyIfNoSCMChanges>false</applyConditionOnlyIfNoSCMChanges>
        </com.tikal.jenkins.plugins.multijob.PhaseJobsConfig>
      </phaseJobs>
      <continuationCondition>SUCCESSFUL</continuationCondition>
      <executionType>PARALLEL</executionType>
    </com.tikal.jenkins.plugins.multijob.MultiJobBuilder>
    <com.tikal.jenkins.plugins.multijob.MultiJobBuilder>
      <phaseName>BUILD_AND_COPY_PACKAGE</phaseName>
      <phaseJobs>
        <com.tikal.jenkins.plugins.multijob.PhaseJobsConfig>
          <jobName>Release_build_linux32</jobName>
          <currParams>false</currParams>
          <aggregatedTestResults>false</aggregatedTestResults>
          <exposedSCM>false</exposedSCM>
          <disableJob>false</disableJob>
          <parsingRulesPath></parsingRulesPath>
          <maxRetries>0</maxRetries>
          <enableRetryStrategy>false</enableRetryStrategy>
          <enableCondition>false</enableCondition>
          <abortAllJob>true</abortAllJob>
          <condition></condition>
          <configs>
            <hudson.plugins.parameterizedtrigger.FileBuildParameters plugin="parameterized-trigger@2.35.2">
              <propertiesFile>release_build_linux32.txt</propertiesFile>
              <failTriggerOnMissing>false</failTriggerOnMissing>
              <textParamValueOnNewLine>false</textParamValueOnNewLine>
              <useMatrixChild>false</useMatrixChild>
              <onlyExactRuns>false</onlyExactRuns>
            </hudson.plugins.parameterizedtrigger.FileBuildParameters>
          </configs>
          <killPhaseOnJobResultCondition>FAILURE</killPhaseOnJobResultCondition>
          <buildOnlyIfSCMChanges>false</buildOnlyIfSCMChanges>
          <applyConditionOnlyIfNoSCMChanges>false</applyConditionOnlyIfNoSCMChanges>
        </com.tikal.jenkins.plugins.multijob.PhaseJobsConfig>
        <com.tikal.jenkins.plugins.multijob.PhaseJobsConfig>
          <jobName>Release_build_windows</jobName>
          <currParams>false</currParams>
          <aggregatedTestResults>false</aggregatedTestResults>
          <exposedSCM>false</exposedSCM>
          <disableJob>false</disableJob>
          <parsingRulesPath></parsingRulesPath>
          <maxRetries>0</maxRetries>
          <enableRetryStrategy>false</enableRetryStrategy>
          <enableCondition>false</enableCondition>
          <abortAllJob>true</abortAllJob>
          <condition></condition>
          <configs>
            <hudson.plugins.parameterizedtrigger.FileBuildParameters plugin="parameterized-trigger@2.35.2">
              <propertiesFile>release_build_windows.txt</propertiesFile>
              <failTriggerOnMissing>false</failTriggerOnMissing>
              <textParamValueOnNewLine>false</textParamValueOnNewLine>
              <useMatrixChild>false</useMatrixChild>
              <onlyExactRuns>false</onlyExactRuns>
            </hudson.plugins.parameterizedtrigger.FileBuildParameters>
          </configs>
          <killPhaseOnJobResultCondition>FAILURE</killPhaseOnJobResultCondition>
          <buildOnlyIfSCMChanges>false</buildOnlyIfSCMChanges>
          <applyConditionOnlyIfNoSCMChanges>false</applyConditionOnlyIfNoSCMChanges>
        </com.tikal.jenkins.plugins.multijob.PhaseJobsConfig>
      </phaseJobs>
      <continuationCondition>SUCCESSFUL</continuationCondition>
      <executionType>PARALLEL</executionType>
    </com.tikal.jenkins.plugins.multijob.MultiJobBuilder>
    <com.tikal.jenkins.plugins.multijob.MultiJobBuilder>
      <phaseName>Integrated_build</phaseName>
      <phaseJobs>
        <com.tikal.jenkins.plugins.multijob.PhaseJobsConfig>
          <jobName>Release_integrated_build</jobName>
          <currParams>true</currParams>
          <aggregatedTestResults>false</aggregatedTestResults>
          <exposedSCM>false</exposedSCM>
          <disableJob>false</disableJob>
          <parsingRulesPath></parsingRulesPath>
          <maxRetries>0</maxRetries>
          <enableRetryStrategy>false</enableRetryStrategy>
          <enableCondition>false</enableCondition>
          <abortAllJob>true</abortAllJob>
          <condition></condition>
          <configs class="empty-list"/>
          <killPhaseOnJobResultCondition>FAILURE</killPhaseOnJobResultCondition>
          <buildOnlyIfSCMChanges>false</buildOnlyIfSCMChanges>
          <applyConditionOnlyIfNoSCMChanges>false</applyConditionOnlyIfNoSCMChanges>
        </com.tikal.jenkins.plugins.multijob.PhaseJobsConfig>
      </phaseJobs>
      <continuationCondition>SUCCESSFUL</continuationCondition>
      <executionType>PARALLEL</executionType>
    </com.tikal.jenkins.plugins.multijob.MultiJobBuilder>
  </builders>
  <publishers/>
  <buildWrappers>
    <hudson.plugins.ws__cleanup.PreBuildCleanup plugin="ws-cleanup@0.32">
      <deleteDirs>false</deleteDirs>
      <cleanupParameter></cleanupParameter>
      <externalDelete></externalDelete>
    </hudson.plugins.ws__cleanup.PreBuildCleanup>
    <hudson.plugins.timestamper.TimestamperBuildWrapper plugin="timestamper@1.8.8"/>
    <org.jenkinsci.plugins.buildnamesetter.BuildNameSetter plugin="build-name-setter@1.6.9">
      <template>${ENV,var=&quot;BUILD_NAME&quot;}</template>
      <runAtStart>true</runAtStart>
      <runAtEnd>false</runAtEnd>
    </org.jenkinsci.plugins.buildnamesetter.BuildNameSetter>
  </buildWrappers>
  <pollSubjobs>false</pollSubjobs>
</com.tikal.jenkins.plugins.multijob.MultiJobProject>