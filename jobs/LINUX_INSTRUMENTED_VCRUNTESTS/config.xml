<?xml version='1.0' encoding='UTF-8'?>
<project>
  <actions/>
  <description>Run VcRunTests on Ubuntu32 bit mac</description>
  <keepDependencies>false</keepDependencies>
  <properties>
    <hudson.model.ParametersDefinitionProperty>
      <parameterDefinitions>
        <hudson.model.StringParameterDefinition>
          <name>VECTORCAST_DIR</name>
          <description></description>
          <defaultValue></defaultValue>
        </hudson.model.StringParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>BUILD_NAME</name>
          <description></description>
          <defaultValue>default</defaultValue>
        </hudson.model.StringParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>LINUX_HARVESTER_DIR</name>
          <description></description>
          <defaultValue></defaultValue>
        </hudson.model.StringParameterDefinition>
      </parameterDefinitions>
    </hudson.model.ParametersDefinitionProperty>
  </properties>
  <scm class="hudson.scm.NullSCM"/>
  <assignedNode>Ubuntu32bit_71</assignedNode>
  <canRoam>false</canRoam>
  <disabled>false</disabled>
  <blockBuildWhenDownstreamBuilding>false</blockBuildWhenDownstreamBuilding>
  <blockBuildWhenUpstreamBuilding>false</blockBuildWhenUpstreamBuilding>
  <triggers/>
  <concurrentBuild>false</concurrentBuild>
  <builders>
    <hudson.tasks.Shell>
      <command>#!/bin/bash -xe

cd $LINUX_HARVESTER_DIR
export VECTOR_LICENSE_FILE=/home/linuxregressionmac/flexlm/vector-UBUNTU.lic
export PYTHONPATH=/usr/lib/python2.7/dist-packages:PYTHONPATH
echo $VECTORCAST_DIR
$VECTORCAST_DIR/vcshell --version
$VECTORCAST_DIR/clicast --version
export VC_RESULT_DIR=$PWD/results


if [ -d results ]; then
	rm -rf ${VC_RESULT_DIR}
fi
mkdir ${VC_RESULT_DIR}


#CMake and run VcRunTests
if [ -d tbuild ]; then
	rm -rf tbuild
fi

mkdir tbuild
cd tbuild
cmake ../tests -DCMAKE_C_COMPILER=gcc -DCMAKE_CXX_COMPILER=g++
export _VC_RUNTEST_RETURN_CODE_=0
$VECTORCAST_DIR/vpython VcRunTests.py --metrics || export _VC_RUNTEST_RETURN_CODE_=$?
find . -name &quot;TESTINSS*&quot; -exec cat &apos;{}&apos; &gt;&gt; ${VC_RESULT_DIR}/VCRUNTESTS.DAT &apos;;&apos;

mkdir longcmd
cd longcmd
cmake  -DCMAKE_C_COMPILER=gcc -DCMAKE_CXX_COMPILER=g++ ../../tests/LongCmd
$VECTORCAST_DIR/vpython ../VcRunTests.py --metrics || export _VC_RUNTEST_RETURN_CODE_=$?
find . -name &quot;TESTINSS*&quot; -exec cat &apos;{}&apos; &gt;&gt; ${VC_RESULT_DIR}/LONGCMD.DAT &apos;;&apos;
cd ..

cd MathTest/Matrix
find . -name &quot;TESTINSS*&quot; -exec rm &apos;{}&apos; &apos;;&apos;
$VECTORCAST_DIR/vpython ../../VcRunTests.py --cmdverb || export _VC_RUNTEST_RETURN_CODE_=$?
find . -name &quot;TESTINSS*&quot; -exec cat &apos;{}&apos; &gt;&gt; ${VC_RESULT_DIR}/CMDVERB.DAT &apos;;&apos;

find . -name &quot;TESTINSS*&quot; -exec rm &apos;{}&apos; &apos;;&apos;
export _VC_OLD_VCAPP_DB_IF_=1
$VECTORCAST_DIR/vpython ../../VcRunTests.py --metrics || export _VC_RUNTEST_RETURN_CODE_=$?
find . -name &quot;TESTINSS*&quot; -exec cat &apos;{}&apos; &gt;&gt; ${VC_RESULT_DIR}/OLD_VCAPP.DAT &apos;;&apos;

find . -name &quot;TESTINSS*&quot; -exec rm &apos;{}&apos; &apos;;&apos;
export _VC_SEQ_DISPATCHER_=1
$VECTORCAST_DIR/vpython ../../VcRunTests.py --metrics || export _VC_RUNTEST_RETURN_CODE_=$?
find . -name &quot;TESTINSS*&quot; -exec cat &apos;{}&apos; &gt;&gt; ${VC_RESULT_DIR}/SEQ_DISPATCHER.DAT &apos;;&apos;

cd ../../../build
find . -name &quot;TESTINSS*&quot; -exec rm &apos;{}&apos; &apos;;&apos;
./RunUnitTest.sh || export _VC_RUNTEST_RETURN_CODE_=$?
find . -name &quot;TESTINSS*&quot; -exec cat &apos;{}&apos; &gt;&gt; ${VC_RESULT_DIR}/UNITTEST.DAT &apos;;&apos;

if [ -d ../release-packages ]; then
	rm -rf ../release-packages
fi
./release-package.sh || if [[ $? == 1 ]]; then 
		true
    else
    	false
    fi
cd ../release-packages/release/examples
./buildall.sh || export _VC_RUNTEST_RETURN_CODE_=$?
find . -name &quot;TESTINSS*&quot; -exec cat &apos;{}&apos; &gt;&gt; ${VC_RESULT_DIR}/EXAMPLES.DAT &apos;;&apos;


cd ${LINUX_HARVESTER_DIR}/cover
declare -a results=(&quot;VCRUNTESTS&quot; &quot;LONGCMD&quot; &quot;CMDVERB&quot; &quot;OLD_VCAPP&quot; &quot;SEQ_DISPATCHER&quot; &quot;UNITTEST&quot; &quot;EXAMPLES&quot;)
for result in &quot;${results[@]}&quot;
do
$VECTORCAST_DIR/clicast -lc -e harvester cover result remove $result ${VC_RESULT_DIR}/$result.DAT || export _VC_RUNTEST_RETURN_CODE_=$?
$VECTORCAST_DIR/clicast -lc -e harvester cover result add  ${VC_RESULT_DIR}/$result.DAT
done

echo The return code from VcRunTests: $_VC_RUNTEST_RETURN_CODE_</command>
    </hudson.tasks.Shell>
  </builders>
  <publishers/>
  <buildWrappers>
    <hudson.plugins.ws__cleanup.PreBuildCleanup plugin="ws-cleanup@0.32">
      <deleteDirs>false</deleteDirs>
      <cleanupParameter></cleanupParameter>
      <externalDelete></externalDelete>
    </hudson.plugins.ws__cleanup.PreBuildCleanup>
    <org.jenkinsci.plugins.buildnamesetter.BuildNameSetter plugin="build-name-setter@1.6.5">
      <template>${ENV,var=&quot;BUILD_NAME&quot;}</template>
      <runAtStart>true</runAtStart>
      <runAtEnd>true</runAtEnd>
    </org.jenkinsci.plugins.buildnamesetter.BuildNameSetter>
  </buildWrappers>
</project>