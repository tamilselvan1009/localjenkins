<?xml version='1.1' encoding='UTF-8'?>
<project>
  <actions/>
  <description>This build the VectorCAST using latest vcshell executable.</description>
  <keepDependencies>false</keepDependencies>
  <properties>
    <hudson.plugins.buildblocker.BuildBlockerProperty plugin="build-blocker-plugin@1.7.3">
      <useBuildBlocker>false</useBuildBlocker>
      <blockLevel>GLOBAL</blockLevel>
      <scanQueueFor>DISABLED</scanQueueFor>
      <blockingJobs></blockingJobs>
    </hudson.plugins.buildblocker.BuildBlockerProperty>
    <com.sonyericsson.rebuild.RebuildSettings plugin="rebuild@1.30">
      <autoRebuild>false</autoRebuild>
      <rebuildDisabled>false</rebuildDisabled>
    </com.sonyericsson.rebuild.RebuildSettings>
    <hudson.model.ParametersDefinitionProperty>
      <parameterDefinitions>
        <hudson.model.StringParameterDefinition>
          <name>VECTORCAST_DIR</name>
          <description>Specify the vectorcast directory</description>
          <defaultValue></defaultValue>
          <trim>false</trim>
        </hudson.model.StringParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>VECTOR_LICENSE_FILE</name>
          <description>Specify the license server</description>
          <defaultValue></defaultValue>
          <trim>false</trim>
        </hudson.model.StringParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>BUILD_NAME</name>
          <description></description>
          <defaultValue></defaultValue>
          <trim>false</trim>
        </hudson.model.StringParameterDefinition>
      </parameterDefinitions>
    </hudson.model.ParametersDefinitionProperty>
    <hudson.plugins.throttleconcurrents.ThrottleJobProperty plugin="throttle-concurrents@2.0.1">
      <maxConcurrentPerNode>0</maxConcurrentPerNode>
      <maxConcurrentTotal>0</maxConcurrentTotal>
      <categories class="java.util.concurrent.CopyOnWriteArrayList"/>
      <throttleEnabled>false</throttleEnabled>
      <throttleOption>project</throttleOption>
      <limitOneJobWithMatchingParams>false</limitOneJobWithMatchingParams>
      <paramsToUseForLimit></paramsToUseForLimit>
    </hudson.plugins.throttleconcurrents.ThrottleJobProperty>
  </properties>
  <scm class="hudson.scm.NullSCM"/>
  <assignedNode>Reg-win-2</assignedNode>
  <canRoam>false</canRoam>
  <disabled>false</disabled>
  <blockBuildWhenDownstreamBuilding>false</blockBuildWhenDownstreamBuilding>
  <blockBuildWhenUpstreamBuilding>false</blockBuildWhenUpstreamBuilding>
  <triggers/>
  <concurrentBuild>false</concurrentBuild>
  <builders>
    <hudson.tasks.BatchFile>
      <command>if not exist n: (&#xd;
    subst n: C:\vcast_libs\n&#xd;
)&#xd;
if not exist q: (&#xd;
    subst q: C:\vcast_libs\q&#xd;
)&#xd;
set PATH=C:\52\cygwin\bin;%PATH%&#xd;
bash -c &quot;/home/vectorindia/build_vcast.sh&quot;&#xd;
C:\sqlite3\sqlite3.exe C:\52\cygwin\home\vectorindia\%BUILD_NAME%.db &lt; C:\52\cygwin\home\vectorindia\sqlite3_cmd.txt</command>
    </hudson.tasks.BatchFile>
  </builders>
  <publishers>
    <org.jvnet.hudson.plugins.groovypostbuild.GroovyPostbuildRecorder plugin="groovy-postbuild@2.4">
      <script plugin="script-security@1.65">
        <script>import hudson.model.*

import java.util.regex.Pattern

manager.listener.logger.println(&quot;Executing Groovy post build&quot;)

def buildLog = manager.build.getLog()
String table = &quot;&quot;
int count  =0  

def expected_count = [:] 
expected_count[&quot;files&quot;] = 1835
expected_count[&quot;commands&quot;] = 10230
expected_count[&quot;comment_density&quot;] = 1761
expected_count[&quot;vcmetrics&quot;] = 7759
expected_count[&quot;gcc&quot;] = 1
expected_count[&quot;cl&quot;] = 1830
expected_count[&quot;vcmetrics_recorded_for_files&quot;] = 1348

Pattern pattern_1 = Pattern.compile(&apos;(?s)select count \\(\\*\\) from (.*?);.*?(\\d+)&apos;)
buildLog.eachMatch pattern_1, {
        if( ((expected_count[ it[1] ]-1)&gt;Integer.valueOf(it[2])) &amp;&amp; (Integer.valueOf(it[2])  &gt; (expected_count[ it[1] ]+1)) ){
           manager.buildFailure()
           manager.addBadge(&quot;error.gif&quot;, &quot;Entry in &quot; + it[1] + &quot; table not in range&quot;)
           manager.listener.logger.println(&quot;Entry in &quot; + it[1] + &quot; table not in range&quot;)
      }
}   

Pattern pattern_2 = Pattern.compile(&apos;(?s)select.*?%(.*?)[.]exe%.*?(\\d+)&apos;)
buildLog.eachMatch pattern_2, {
        if( Integer.valueOf(it[2]) != expected_count[it[1]]){
                    manager.buildFailure()
                    manager.addBadge(&quot;error.gif&quot;, &quot;Number of files associated with &quot; + it[1] + &quot; not in range&quot;)
                    manager.listener.logger.println(&quot;Number of files associated with &quot; + it[1] + &quot; not in range&quot;)
      }
}   

Pattern pattern_3 = Pattern.compile(&apos;(?s)select count [(]DISTINCT FILENAME[)] from vcmetrics;.*?(\\d+)&apos;)
buildLog.eachMatch pattern_3, {
        if(Integer.valueOf(it[1]) != expected_count[&quot;vcmetrics_recorded_for_files&quot;]){
                    manager.buildFailure()
                    manager.addBadge(&quot;error.gif&quot;, &quot;Number of files associated with &quot; +
                                                      &quot;vcmetrics recorded for files not in range&quot;)
                    manager.listener.logger.println(&quot;Number of files associated with &quot; +
                                                                      &quot;vcmetrics recorded for files not in range&quot;)
      }
}   

manager.listener.logger.println(&quot;Done executing Groovy post build&quot;)</script>
        <sandbox>false</sandbox>
      </script>
      <behavior>2</behavior>
      <runForMatrixParent>false</runForMatrixParent>
    </org.jvnet.hudson.plugins.groovypostbuild.GroovyPostbuildRecorder>
    <hudson.tasks.Mailer plugin="mailer@1.21">
      <recipients>gotkhindi.sheetal@vector.com</recipients>
      <dontNotifyEveryUnstableBuild>false</dontNotifyEveryUnstableBuild>
      <sendToIndividuals>false</sendToIndividuals>
    </hudson.tasks.Mailer>
  </publishers>
  <buildWrappers>
    <org.jenkinsci.plugins.buildnamesetter.BuildNameSetter plugin="build-name-setter@1.6.9">
      <template>${ENV,var=&quot;BUILD_NAME&quot;}</template>
      <runAtStart>true</runAtStart>
      <runAtEnd>true</runAtEnd>
    </org.jenkinsci.plugins.buildnamesetter.BuildNameSetter>
  </buildWrappers>
</project>