<?xml version='1.0' encoding='UTF-8'?>
<project>
  <actions/>
  <description></description>
  <keepDependencies>false</keepDependencies>
  <properties>
    <hudson.model.ParametersDefinitionProperty>
      <parameterDefinitions>
        <net.uaznia.lukanus.hudson.plugins.gitparameter.GitParameterDefinition plugin="git-parameter@0.8.0">
          <name>GIT_BRANCH_NAME</name>
          <description>name of the branch. default is origin/develop</description>
          <uuid>e085c7a7-0067-4838-b0a5-6cbce274e13f</uuid>
          <type>PT_BRANCH</type>
          <branch></branch>
          <tagFilter>*</tagFilter>
          <branchFilter>.*</branchFilter>
          <sortMode>NONE</sortMode>
          <defaultValue>origin/develop</defaultValue>
          <selectedValue>NONE</selectedValue>
          <quickFilterEnabled>false</quickFilterEnabled>
        </net.uaznia.lukanus.hudson.plugins.gitparameter.GitParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>WIN_GIT_DIR</name>
          <description>Location of Git in windows path</description>
          <defaultValue>N:\\shared\\VC_TOT\\Git</defaultValue>
        </hudson.model.StringParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>LINUX_GIT_DIR</name>
          <description>Location of Git in linux path</description>
          <defaultValue>/mnt/nfs/shared/VC_TOT/Git</defaultValue>
        </hudson.model.StringParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>BUILD_NAME</name>
          <description>Specify a name for the jenkins build</description>
          <defaultValue></defaultValue>
        </hudson.model.StringParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>LINUX_VECTORCAST_DIR</name>
          <description>Enter value of VC. Extract new VC in /mnt/nfs/shared/.VCAST_REGRESSION/VC_Releases/linux/ for every VectorCAST Release</description>
          <defaultValue>/mnt/nfs/shared/.VCAST_REGRESSION/VC_Releases/linux/vc64x</defaultValue>
        </hudson.model.StringParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>WIN_VECTORCAST_DIR</name>
          <description>Enter value of VC. Extract new VC in N:\\hared\\.VCAST_REGRESSION\\VC_Releases\\windows\\ for every VectorCAST Release</description>
          <defaultValue>N:\\hared\\.VCAST_REGRESSION\\VC_Releases\\windows\\vc64x</defaultValue>
        </hudson.model.StringParameterDefinition>
      </parameterDefinitions>
    </hudson.model.ParametersDefinitionProperty>
  </properties>
  <scm class="hudson.plugins.git.GitSCM" plugin="git@3.1.0">
    <configVersion>2</configVersion>
    <userRemoteConfigs>
      <hudson.plugins.git.UserRemoteConfig>
        <url>https://github.com/VectorSoftwareRI/Harvester</url>
        <credentialsId>git</credentialsId>
      </hudson.plugins.git.UserRemoteConfig>
    </userRemoteConfigs>
    <branches>
      <hudson.plugins.git.BranchSpec>
        <name>${GIT_BRANCH_NAME}</name>
      </hudson.plugins.git.BranchSpec>
    </branches>
    <doGenerateSubmoduleConfigurations>false</doGenerateSubmoduleConfigurations>
    <submoduleCfg class="list"/>
    <extensions>
      <hudson.plugins.git.extensions.impl.CloneOption>
        <shallow>false</shallow>
        <noTags>false</noTags>
        <reference></reference>
        <timeout>20</timeout>
        <depth>0</depth>
        <honorRefspec>false</honorRefspec>
      </hudson.plugins.git.extensions.impl.CloneOption>
    </extensions>
  </scm>
  <assignedNode>master</assignedNode>
  <canRoam>false</canRoam>
  <disabled>false</disabled>
  <blockBuildWhenDownstreamBuilding>false</blockBuildWhenDownstreamBuilding>
  <blockBuildWhenUpstreamBuilding>false</blockBuildWhenUpstreamBuilding>
  <triggers/>
  <concurrentBuild>false</concurrentBuild>
  <builders>
    <hudson.tasks.Shell>
      <command>#!/bin/bash -xe

# change the vctools version to the git commit id
ulimit -c unlimited
export COMMIT_ID=$(git rev-parse --short HEAD)
sed -i &quot;s/.*#define _VCTOOLS_VERSION_.*/#define _VCTOOLS_VERSION_ \&quot;${COMMIT_ID}\&quot;/&quot; harvester/inc/vcVersion.h

# copy all the files to git dir
rm -rf &quot;${LINUX_GIT_DIR}&quot;
mkdir &quot;${LINUX_GIT_DIR}&quot;
cp -r * &quot;${LINUX_GIT_DIR}/.&quot;

#-----------------------------------------------------------------------------------------------------------#

# Run tests
export VECTOR_LICENSE_FILE=7650@licenseserver
export PYTHONPATH=/usr/lib/python2.7/dist-packages:$PYTHONPATH
export VECTORCAST_DIR=${LINUX_VECTORCAST_DIR}

cd $WORKSPACE
rm -rf tbuild64
mkdir tbuild64
cd tbuild64
cmake ../tests -DCMAKE_C_COMPILER=gcc -DCMAKE_CXX_COMPILER=g++
cp /mnt/nfs/shared/Jenkins/vc_ltest_add_dir vc_test_add_dir
$VECTORCAST_DIR/vpython VcRunTests.py</command>
    </hudson.tasks.Shell>
    <hudson.plugins.parameterizedtrigger.TriggerBuilder plugin="parameterized-trigger@2.33">
      <configs>
        <hudson.plugins.parameterizedtrigger.BlockableBuildTriggerConfig>
          <configs>
            <hudson.plugins.parameterizedtrigger.CurrentBuildParameters/>
          </configs>
          <projects>Linux32_on_VC,Win32_64_on_VC</projects>
          <condition>ALWAYS</condition>
          <triggerWithNoParameters>false</triggerWithNoParameters>
          <triggerFromChildProjects>false</triggerFromChildProjects>
          <block/>
          <buildAllNodesWithLabel>false</buildAllNodesWithLabel>
        </hudson.plugins.parameterizedtrigger.BlockableBuildTriggerConfig>
      </configs>
    </hudson.plugins.parameterizedtrigger.TriggerBuilder>
  </builders>
  <publishers/>
  <buildWrappers>
    <hudson.plugins.ws__cleanup.PreBuildCleanup plugin="ws-cleanup@0.32">
      <deleteDirs>false</deleteDirs>
      <cleanupParameter></cleanupParameter>
      <externalDelete></externalDelete>
    </hudson.plugins.ws__cleanup.PreBuildCleanup>
    <hudson.plugins.timestamper.TimestamperBuildWrapper plugin="timestamper@1.8.8"/>
    <org.jenkinsci.plugins.buildnamesetter.BuildNameSetter plugin="build-name-setter@1.6.5">
      <template>${ENV, var=&quot;BUILD_NAME&quot;}</template>
      <runAtStart>true</runAtStart>
      <runAtEnd>false</runAtEnd>
    </org.jenkinsci.plugins.buildnamesetter.BuildNameSetter>
  </buildWrappers>
</project>